import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Mapper.Context;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.Reducer;




public class MyStringSearch 
{
  public static class TokenMapper extends Mapper<LongWritable,Text,Text,IntWritable>
  {
	  private final static IntWritable one=new IntWritable(1);
	  private Text sentence=new Text();
	  public void map(LongWritable key,Text value,Context context)throws IOException,InterruptedException
	  {
		  String mySearchText=context.getConfiguration().get("myText");
		  String line=value.toString();
		  String newline=line.toLowerCase();
		  String newText=mySearchText.toLowerCase();
		  if(mySearchText!=null)
		  {
			  if(newline.contains(newText))
			  {
				  sentence.set(newline);
				  context.write(sentence, one);
			  }
			
		  }
	  }
  }
  public static class SumReducer extends Reducer<Text,IntWritable,Text,IntWritable>
  {
	  private IntWritable result=new IntWritable();
	  public void reduce(Text key,Iterable<IntWritable> values,Context context)throws IOException,InterruptedException
	  {		  int sum=0;
		  for(IntWritable val:values)
		  {
			sum+=val.get();  
		  }
		  result.set(sum);
		  context.write(key,result);
	  }
  }
  public static void main(String[] args) throws Exception
  {
	  Configuration conf = new Configuration();
	    //conf.set("name", "value")
	  if(args.length>2)
	  {
		  conf.set("myText", args[2]);
	  }
	  else
	  {
		  System.exit(0);
	  }
	    
	    Job job = Job.getInstance(conf, "String Search");
	    job.setJarByClass(MyStringSearch.class);
	    job.setMapperClass(TokenMapper.class);
	    //job.setCombinerClass(IntSumReducer.class);
	    job.setReducerClass(SumReducer.class);
	    //job.setNumReduceTasks(0);
	    job.setOutputKeyClass(Text.class);
	    job.setOutputValueClass(IntWritable.class);
	    FileInputFormat.addInputPath(job, new Path(args[0]));
	    FileOutputFormat.setOutputPath(job, new Path(args[1]));
	    System.exit(job.waitForCompletion(true) ? 0 : 1);
  }

}

